<server>
    <featureManager>
        <feature>enterpriseBeans-4.0</feature>
        <feature>servlet-6.0</feature>
        <feature>faces-4.0</feature>
        <feature>pages-3.1</feature>
        <feature>persistence-3.1</feature>
        <feature>mdb-4.0</feature>
        <feature>messagingServer-3.0</feature>
        <feature>messagingClient-3.0</feature>
        <feature>cdi-4.0</feature>
        <feature>websocket-2.1</feature>
        <feature>concurrent-3.0</feature>
        <feature>jsonp-2.1</feature>
        <feature>jsonb-3.0</feature>
        <feature>beanValidation-3.0</feature>
        <feature>restfulWS-3.1</feature>
        <feature>ssl-1.0</feature>
        <feature>mpMetrics-5.1</feature>
    </featureManager>

    <!-- <keyStore id="defaultKeyStore" password="yourPassword" /> -->

    <quickStartSecurity userName="admin" userPassword="admin" />
    <mpMetrics authentication="false" />

    <!-- adding in to see if it will fix DB2/MQ certificate issues in dev cluster -->
    <ssl id="defaultSSLConfig" trustDefaultCerts="true" /> 
    
    <variable name="default.http.port" defaultValue="9080"/>
    <variable name="default.https.port" defaultValue="9443"/>
    <!--<logging traceSpecification="daytrader=fine"/>-->

    <!-- allow reuse of 'busy' ports for fast server recycling on linux (where ports remain blocked for up to 2 mins after server stops) ${tradelite.http.port} set in bootstrap.properties -->
    <httpEndpoint host="*" httpPort="${default.http.port}" httpsPort="${default.https.port}" id="defaultHttpEndpoint">
        <tcpOptions soReuseAddr="true" />
        <httpOptions maxKeepAliveRequests="-1" />
    </httpEndpoint>

    <application location="io.openliberty.sample.daytrader10.war" type="war" context-root="/daytrader" />

    <connectionManager agedTimeout="-1" connectionTimeout="0" id="conMgr1" maxIdleTime="-1" maxPoolSize="100" minPoolSize="100" purgePolicy="FailingConnectionOnly" reapTime="-1"/> 

    <jdbcDriver id="DB2JCC" libraryRef="DB2JCCLib"/>
    <library id="DB2JCCLib" filesetRef="DB2JCCFileset"/>
    <fileset id="DB2JCCFileset" dir="/config/db2jars" includes="db2jcc4.jar"/>

    <authData id="TradeDataSourceAuthData" user="${env.dbUser}" password="${Db2Credentials}"/>

    <dataSource jndiName="jdbc/TradeDataSource" jdbcDriverRef="DB2JCC" id="DefaultDataSource" connectionManagerRef="conMgr1" statementCacheSize="60" isolationLevel="TRANSACTION_READ_COMMITTED" type="javax.sql.XADataSource">
        <properties serverName="${env.tradeDbHost}" portNumber="${env.tradeDbPort}" databaseName="${env.tradeDbName}" driverType="4" user="${env.dbUser}" password="${Db2Credentials}" sslConnection="${env.sslconn}"/>
    </dataSource>


    <!-- password specified when starting MQ docker container (e.g. MQ_APP_PASSWORD=passw0rd)-->
    <authData id="TradeAdminAuthData" user="${env.mqUser}" password="${MQCredentials}" />

    <resourceAdapter id="mqJmsRa" location="/config/wmq.jakarta.jmsra.rar" />
    
    <connectionManager id="mqConMgr1" connectionTimeout="60s" maxPoolSize="20"/>
    <connectionManager id="mqConMgr2" connectionTimeout="60s" maxPoolSize="20"/>

    <jmsQueueConnectionFactory jndiName="jms/TradeBrokerQCF" connectionManagerRef="mqConMgr1">
        <properties.mqJmsRa
           channel="${env.mqChannel}"
           hostName="${env.mqHost}"
           port="${env.mqPort}"
           queueManager="${env.QueueManager}" 
           transportType="CLIENT" 
           userName="${env.mqUser}"
           password="${MQCredentials}"/>
    </jmsQueueConnectionFactory>

    <jmsTopicConnectionFactory jndiName="jms/TradeStreamerTCF" connectionManagerRef="mqConMgr2">
        <properties.mqJmsRa 
           transportType="CLIENT"
           hostName="${env.mqHost}"
           port="${env.mqPort}"
           channel="${env.mqChannel}"
           queueManager="${env.QueueManager}"
           userName="${env.mqUser}"
           password="${MQCredentials}"/>
    </jmsTopicConnectionFactory>

    <jmsQueue id="TradeBrokerQueue" jndiName="jms/TradeBrokerQueue">
       <properties.mqJmsRa baseQueueName="TradeBrokerQueue"  />
    </jmsQueue>

    <jmsTopic id="TradeStreamerTopic" jndiName="jms/TradeStreamerTopic">
       <properties.mqJmsRa baseTopicName="TradeStreamerTopic" />
    </jmsTopic>

    <jmsActivationSpec id="io.openliberty.sample.daytrader10/DTBroker3MDB" authDataRef="TradeAdminAuthData">
        <properties.mqJmsRa 
           transportType="CLIENT"
           hostName="${env.mqHost}"
           port="${env.mqPort}"
           channel="${env.mqChannel}"
           queueManager="${env.QueueManager}"
           destinationRef="TradeBrokerQueue"
           destinationType="jakarta.jms.Queue"/>
    </jmsActivationSpec>

    <jmsActivationSpec id="io.openliberty.sample.daytrader10/DTStreamer3MDB" authDataRef="TradeAdminAuthData">
        <properties.mqJmsRa 
           transportType="CLIENT"
           hostName="${env.mqHost}"
           port="${env.mqPort}"
           channel="${env.mqChannel}"
           queueManager="${env.QueueManager}"
           destinationRef="TradeStreamerTopic"
           destinationType="jakarta.jms.Topic"/>
    </jmsActivationSpec>
    

</server>
